binary_sensor:
  - state_topic: "heatpumps/HOSTNAME/status"
    name: "NAME operating"
    value_template: '{{ value_json.operating }}'
    payload_on: true
    payload_off: false

sensor:
  - state_topic: "heatpumps/HOSTNAME/status"
    name: "NAME temperature"
    device_class: "temperature"
    value_template: '{{ value_json.roomTemperature*2 + 27 }}'
    unit_of_measurement: "°F"
  - state_topic: "heatpumps/HOSTNAME/status"
    name: "NAME wiggle"
    value_template: '{{ value_json.wiggle }}'
    unit_of_measurement: "na"

switch:
  - name: "NAME power"
    command_topic: "heatpumps/HOSTNAME/control"
    state_topic: "heatpumps/HOSTNAME/settings"
    payload_on: '{"power":"ON"}'
    payload_off: '{"power":"OFF"}'
    state_on: "ON"
    state_off: "OFF"
    value_template: '{{ value_json.power }}'

number:
  - name: "NAME set temperature"
    command_topic: "heatpumps/HOSTNAME/control"
    state_topic: "heatpumps/HOSTNAME/settings"
    min: 60
    max: 80
    mode: "box"
    step: 1
    unit_of_measurement: "°F"
    value_template: '{{ (value_json.temperature*2 + 27) | round() }}'
    command_template: '{ "temperature": {{ (value-27)*0.5 }} }'

select:
  - name: "NAME fan"
    command_topic: "heatpumps/HOSTNAME/control"
    state_topic: "heatpumps/HOSTNAME/settings"
    value_template: '{{ value_json.fan }}'
    command_template: '{ "fan": "{{ value }}" }'
    options: ["AUTO", "QUIET", "1", "2", "3", "4"]

  - name: "NAME vane"
    command_topic: "heatpumps/HOSTNAME/control"
    state_topic: "heatpumps/HOSTNAME/settings"
    value_template: '{{ value_json.vane }}'
    command_template: '{ "vane": "{{ value }}" }'
    options: ["AUTO", "1", "2", "3", "4", "5", "SWING"]

  - name: "NAME mode"
    command_topic: "heatpumps/HOSTNAME/control"
    state_topic: "heatpumps/HOSTNAME/settings"
    value_template: '{{ value_json.mode }}'
    command_template: '{ "mode": "{{ value }}" }'
    options: ["HEAT", "DRY", "COOL", "FAN", "AUTO"]
